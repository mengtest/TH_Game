技能的设计思路

一、技能分配器
    生成技能对象
    在战斗开始的时候加载当前战斗中可能会用到的技能
    如果有漏掉的技能，则在创建这个将的时候加载这个技能

二、技能执行器
    执行技能
    需要提供以下几个接口
    1、getEnemy()           选择一个敌人对象
    2、getParty()           选择一个队友对象
    3、getEnemy(number)     选择多个敌人对象
    4、getParty(number)     选择多个队友对象
    5、getAllParty()        选择所有队友对象
    6、getAllEnemy()        选择所有敌人对象
    7、getAll()             选择场上所有对象

三、技能拦截器
    处理技能之间的交互
    对目标使用技能增加buff后，会在技能执行器中增加这个buff对象，
        

四、技能处理器
    管理以上三个组件
    
五、ps
    因为本游戏是一个网络游戏，所以个人认为，技能的执行其实实在服务端
    客户端相关的操作只有：选择目标、使用的是哪个技能
    服务端相关的操作只有：目标的合法性、技能的合法性、是否满足使用条件、技能的执行
    
六、客户端技能相关的操作主要为
    在战斗场景中，加载对应卡牌的技能，只包含有图片、文本等显示相关的部分
    玩家点击这个技能之后的一些操作，比如选择目标，如果目标检测合法的话，则发送一条消息到服务端
    这条消息包含有，使用这个技能的卡牌、技能的id、选择的目标
    
    如果执行成功了的话，则播放对应的特效
    
七、服务端技能相关的操作
    解析整个数据信息
    获取使用的技能
    获取当前使用这个技能的卡牌信息
    验证当前卡牌是否含有这个技能
    验证技能的条件是否满足
    验证技能的目标是否正确
    根据当前卡牌以及目标的信息计算技能实际产生效果的后的信息
    执行技能
    将技能执行后的数据返回给客户端
    返回的信息应当包含
    技能执行是否成功、当前场景中需要修改数据的卡牌相关的信息
    
    