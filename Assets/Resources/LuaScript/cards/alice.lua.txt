local Alice = {
    id = 0, --固有属性
    type = "Card", --由于lua脚本没有类型的概念，所以人为添加一个以此来区分不同的对象
    name = "",  --用于在界面中显示的名称
    uniqueName = "这个会动态生成，最终的结构为    用户uid + 卡牌id + 随机生成一个字母", --程序所使用的id，实际上是一个字符串
    --技能表，包含有多个被动以及一个主动(留有多技能接口，但是不使用)
    skills = {

    },
    --当前hp
    hp = 0,
    --最大hp
    maxHp = 0,
    --当前mp
    mp = 0,
    --最大mp
    maxMp = 0,
    --显示在游戏场景中的图片或者模型路径
    model = "",
    --星阶级
    career = 1,
    --等级
    level = 1,
}

--@desc 创建一个卡牌对象，这里的这个对象是Alice
--@data: 传入的是一个由json字符串转出来的对象
--@return [LuaScript.cards.alice#Alice]
function Alice:Create(data)
    local card = {}
    setmetatable(card, self)
    card.__index = self
    -- 有一个被动技能配置表
    card.skills = {
        asd = 1,
        zxc = 2
    }
    --@RefType [LuaScript.cards.alice#Alice]
    return card
end

--@desc 获取这个卡牌的id
function Alice:GetId()
    return self.id
end

--@desc 获取这个卡牌在当前对局中的唯一名称
function Alice:GetUniqueName()
    --这个id由服务器来分配,以保证同名卡片的唯一性
    return self.uniqueName
end

--@desc 获取当前卡牌的名称
function Alice:GetName()
    return self.name
end

--@desc 获取当前卡牌的技能列表
--@index: 技能的index
--@return [LuaScript.skills.skill#_skill]
function Alice:GetSkill(index)
    
end


--将这个脚本添加到对局当中后执行的
function Alice:Execute()
    
end

return Alice