_luaExtend = {}

function _luaExtend:Call(name, ...)
    if self.methods[name] ~= nil then
        self.methods[name](...)
    else
        log("不存在的方法", LOG_ERROR)
    end
end

_luaExtend.methods = {}

local function test(...)
    log("测试方法")
    print(...)
end

--[[]---@param func function
--local function co_create(func)
--    require"xlua.util".
--end]]

--_luaExtend.methods.co_create = function(f, t)
--    local co = coroutine.create(function(o)
--        f()
--        coroutine.yield()
--        t()
--    end)
--    coroutine.resume(co, co, t)
--    return co
--end
--
--_luaExtend.methods.co_resume = function(co)
--    
--end

_luaExtend.methods.test = test
--_luaExtend.methods

return _luaExtend