---这个文件中处理所有的消息，并更新ui
---@class MsgHandle
local MsgHandle = {}

--region
--public const int NN_EVENT_BEGIN = 10000;
--public const int ATTR_BEGIN = 20000;
--public const int PLAYER_ATTR_BEGIN = ATTR_BEGIN + 1000;
--public const int PAWN_ATTR_BEGIN = ATTR_BEGIN + 2000;
--public const int BUFF_ATTR_BEGIN = ATTR_BEGIN + 3000;
--public const int PAWN_MOVE_BEGIN = ATTR_BEGIN + 4000;
--public const int COST_BEGIN = 30000;
--public const int PLAYER_COST_BEGIN = COST_BEGIN + 1000;
--public const int PAWN_COST_BEGIN = COST_BEGIN + 2000;
--public const int EventPawnAttrHp = PAWN_ATTR_BEGIN + 1;
--public const int EventPawnAttrMp = PAWN_ATTR_BEGIN + 2;
--public const int EventPawnAttrMatk = PAWN_ATTR_BEGIN + 3;
--public const int EventPawnAttrAtk = PAWN_ATTR_BEGIN + 4;
--public const int EventPawnAttrDef = PAWN_ATTR_BEGIN + 5;
--public const int EventPawnAttrMdef = PAWN_ATTR_BEGIN + 6;
--public const int EventPawnAttrBuff = PAWN_ATTR_BEGIN + 7;
--public const int EventPawnAttrSkill = PAWN_ATTR_BEGIN + 8;
--public const int EventPawnAttrPosType = PAWN_ATTR_BEGIN + 9;
--public const int EventPawnAttrPos = PAWN_ATTR_BEGIN + 10;
--public const int EventPawnAttrDead = PAWN_ATTR_BEGIN + 11;
--public const int EventBuffAttrRestTime = BUFF_ATTR_BEGIN + 1;
--public const int EventBuffAttrDispose = BUFF_ATTR_BEGIN + 2;
--public const int EventBuffAttrOverlay = BUFF_ATTR_BEGIN + 3;
--public const int EventBuffAttrDestroy = BUFF_ATTR_BEGIN + 4;
--public const int EventPlayerAttrHp = PLAYER_ATTR_BEGIN + 1;
--public const int EventPlayerAttrEnergy = PLAYER_ATTR_BEGIN + 2;
--public const int EventPlayerAttrMaxEnergy = PLAYER_ATTR_BEGIN + 3;
--public const int EventPlayerAttrGold = PLAYER_ATTR_BEGIN + 4;
--//以下为一些移动棋子的事件
--public const int PlayerAttrHandCardsToDeck = PAWN_MOVE_BEGIN + 1;
--public const int PlayerAttrCombatCardToDeck = PAWN_MOVE_BEGIN + 2;
--public const int PlayerAttrDeckCardsToCombat = PAWN_MOVE_BEGIN + 3;
--public const int PlayerAttrDeckCardsToHand = PAWN_MOVE_BEGIN + 4;
--public const int PlayerAttrHandCardsToCombat = PAWN_MOVE_BEGIN + 5;
--public const int PlayerAttrCombatCardsToHand = PAWN_MOVE_BEGIN + 6;
--public const int CostPawnHp = 1 + PAWN_COST_BEGIN;
--public const int CostPawnMp = 2 + PAWN_COST_BEGIN;
--public const int CostPawnAtk = 3 + PAWN_COST_BEGIN;
--public const int CostPawnDef = 4 + PAWN_COST_BEGIN;
--//无视这个就行了
--// const int CostPawnMp2 = 5 + PAWN_COST_BEGIN;
--public const int CostPawnMatk = 6 + PAWN_COST_BEGIN;
--public const int CostPawnMdef = 7 + PAWN_COST_BEGIN;
--public const int CostPlayerHp = 1 + PLAYER_COST_BEGIN;
--public const int CostPlayerEnergy = 2 + PLAYER_COST_BEGIN;
--public const int CostPlayerMaxEnergy = 3 + PLAYER_COST_BEGIN;
--public const int CostPlayerGold = 4 + PLAYER_COST_BEGIN;
--endregion

---玩家抽卡成功后的更新
---这里的逻辑有点复杂，主要包括有：1、从卡组中添加一个棋子到手中 2、初始化该棋子所有的属性 3、左侧的卡池中的数据也会有响应的更新
---@param pawnUid number 玩家抽到的棋子的uid
local function playerDrawCard(playerId, pawnUid)
    ---@type Scene.CombatScene.UserInputScript
    local input = require"modules.BattleScene.userInputLayer".inputLayer
    
    if playerId == GamePlay.cur():getPlayer() then  
        ---如果是当前玩家抽取到卡牌，则需要从对象池中获取一个卡牌对象，并添加到手牌的数组中

        ---@type UnityEngine.GameObject
        local go = CS.Util.Pool.Get("CardImgs")
        ---从对象池中取出的物品默认是没有激活的
        go:SetActive(true)
        ---需要能将卡牌从卡组的位置移动到当前玩家的手牌列表中
        ---最好可以播放一段动画
        -- TODO
        go.transform:SetParent(input.myHandList.transform)

        local cardId = GamePlay.cur():getIdByUid(pawnUid)
        local info = global.cardInfos[cardId]

        ---获取战斗场景中的卡牌脚本，初始化脚本中的各种属性
        ---@type Prefab.CombatSceneCombatCardScript
        local card = go:GetComponent(typeof(CS.Prefab.CombatSceneCombatCardScript))
        card.uid = pawnUid
        ---修改卡牌里面所显示的内容
        card.content.sprite = util.loadSprite("Image/Card/"..info.img)
        card.hp.text = info.hp
        card.mp.text = info.mp
        card.atk.text = info.atk

        ---@type UnityEngine.RectTransform
        local t = go:GetComponent(typeof(CS.UnityEngine.RectTransform))
        t.localPosition = CS.UnityEngine.Vector3.zero
        ---放置到场地上的所有卡牌的scale都会被设置为0.5、0.5、1
        t.localScale = CS.UnityEngine.Vector3(0.5, 0.5, 1)

        CS.Lib.Listener.Instance:Event("player_deck_card_update", false, pawnUid)
    else
        ---如果是敌方玩家的卡牌，则需要在敌方的卡牌列表中添加一个卡牌背面


    end
end

---玩家点击结束回合的按钮后的更新
local function playerTurnEnd(playerId)

end

---玩家的属性变化后的更新
---这里主要包括，金币、hp、能量等的更新，
---@param ty number 枚举值，1、金币 2、hp 3、能量、4 最大能量
local function playerAttrChange(playerId, ty, value)
    local uiLayer = CS.Global.GetRootObject("UILayer")
    local drawAndGold = uiLayer.transform:Find("DrawAndGold")
    if ty == 1 then
        ---@type UnityEngine.UI.Text
        local txt = drawAndGold:Find("Gold"):GetComponent(typeof(CS.UnityEngine.UI.Text))
        txt.text = value
    elseif ty == 2 then
        ---@type UnityEngine.UI.Text
        local txt = drawAndGold:Find("LifePoint"):GetComponent(typeof(CS.UnityEngine.UI.Text))
        txt.text = value
    elseif ty == 3 then
        ---@type UnityEngine.UI.Text
        local txt = drawAndGold:Find("Energy"):GetComponent(typeof(CS.UnityEngine.UI.Text))
        local energy = txt.text
        local cur, max = string.match(energy, "(.)/(.)")
        txt.text = string.format("%d/%s", value, max)
    elseif ty == 4 then
        ---@type UnityEngine.UI.Text
        local txt = drawAndGold:Find("Energy"):GetComponent(typeof(CS.UnityEngine.UI.Text))
        local energy = txt.text
        local cur, max = string.match(energy, "(.)/(.)")
        txt.text = string.format("%s/%d", cur, value)
    end
end

---这个应该主要指的是战斗中的棋子的属性发生变化
---@param ty number 枚举值，具体意义以后再说
local function pawnAttrChange(playerId, pawnUid, ty, value)

end

---这个应该主要指的是战斗中的buff的属性发生变化
---@param ty number 枚举值，具体意义以后再说
local function buffAttrChange(playerId, buffId, ty, value)

end

---棋子死亡
local function pawnDead(playerId, pawnUid)

end

--local function playerDrawCard(playerId, pawnUid)
--
--end

-- local fList = {}
-- fList[tostring(CS.LuaApi.PlayerAttrDeckCardsToHand)] = playerDrawCard

---消息的分发
---@param attr AttrStruct
function MsgHandle.distribute(attr)
    if attr.type == CS.LuaApi.PlayerAttrDeckCardsToHand then
        playerDrawCard(attr.playerId, attr.value)
    elseif attr.type == CS.LuaApi.PlayerAttrHandCardsToDeck then

    elseif attr.type == CS.LuaApi.PlayerAttrCombatCardToDeck then
        
        
        
    elseif attr.type == CS.LuaApi.EventPlayerAttrGold then
        playerAttrChange(attr.playerId, 1, attr.value)
    elseif attr.type == CS.LuaApi.EventPlayerAttrHp then
        playerAttrChange(attr.playerId, 2, attr.value)
    elseif attr.type == CS.LuaApi.EventPlayerAttrMaxEnergy then
        playerAttrChange(attr.playerId, 4, attr.value)
    elseif attr.type == CS.LuaApi.EventPlayerAttrEnergy then
        playerAttrChange(attr.playerId, 3, attr.value)
    end
end

return MsgHandle