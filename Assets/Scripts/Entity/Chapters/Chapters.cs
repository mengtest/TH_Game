// Generated by https://quicktype.io

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Entity.Chapters
{
    public partial class Chapters
    {
        [JsonProperty("version")]
        public string Version { get; set; }

        [JsonProperty("author")]
        public string Author { get; set; }

        [JsonProperty("date")]
        public string Date { get; set; }

        [JsonProperty("chapters")]
        public Chapter[] ChaptersChapters { get; set; }
    }

    public partial class Chapter
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("content")]
        public string Content { get; set; }

        [JsonProperty("scene")]
        public string Scene { get; set; }

        [JsonProperty("img")]
        public string Img { get; set; }
    }

    public partial class Chapters
    {
        public static Chapters FromJson(string json) => JsonConvert.DeserializeObject<Chapters>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Chapters self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}